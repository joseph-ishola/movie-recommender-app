version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    #image: postgres:15
    image: postgres:15-alpine
    container_name: movie-recommender-db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-movie_recommender}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    #image: redis:7
    image: redis:7-alpine
    container_name: movie-recommender-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: movie-recommender-api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-movie_recommender}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FLASK_DEBUG=${FLASK_DEBUG:-false}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      dataimport:
        condition: service_completed_successfully
    restart: unless-stopped

  # Web App
  webapp:
    build:
      context: .
      dockerfile: Dockerfile.webapp
    container_name: movie-recommender-webapp
    environment:
      - API_URL=http://api:5000/api
      - FLASK_DEBUG=${FLASK_DEBUG:-false}
    ports:
      - "8080:8080"
    depends_on:
      - api
    restart: unless-stopped

  # Data Import Service (run once)
  dataimport:
    build:
      context: .
      dockerfile: Dockerfile.dataimport
    container_name: movie-recommender-dataimport
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-movie_recommender}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: "no"

volumes:
  postgres_data:
  redis_data: