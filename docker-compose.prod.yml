# docker-compose.prod.yml
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: ${DB_NAME:-movie_recommender}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    secrets:
      - db_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD_FILE=/run/secrets/db_password
      - DB_NAME=${DB_NAME:-movie_recommender}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FLASK_DEBUG=false
    secrets:
      - db_password
      - api_key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      dataimport:
        condition: service_completed_successfully
    restart: unless-stopped

  webapp:
    build:
      context: .
      dockerfile: Dockerfile.webapp
    environment:
      - API_URL=http://api:5000/api
      - FLASK_DEBUG=false
    ports:
      - "80:8080"  # Expose on standard HTTP port
    depends_on:
      - api
    restart: unless-stopped

  dataimport:
    build:
      context: .
      dockerfile: Dockerfile.dataimport
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD_FILE=/run/secrets/db_password
      - DB_NAME=${DB_NAME:-movie_recommender}
    volumes:
      - ./data:/app/data
    secrets:
      - db_password
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

volumes:
  postgres_data:
  redis_data:

secrets:
  db_password:
    file: ./secrets/db_password.txt
  api_key:
    file: ./secrets/api_key.txt
